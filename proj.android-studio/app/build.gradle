import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    dexOptions {
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }

    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    defaultConfig {
        resConfigs "en"
        applicationId "rabi.battle.royale.pubg.mobile.game.warrior.ground.fps.fight.shoot.io"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 12
        versionName "1.7.6"
        multiDexEnabled true
        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("D:/CocosDashboard_1.0.6/resources/.editors/Creator/2.3.4/resources/cocos2d-x"),
                                        project.file("D:/CocosDashboard_1.0.6/resources/.editors/Creator/2.3.4/resources/cocos2d-x/cocos"),
                                        project.file("D:/CocosDashboard_1.0.6/resources/.editors/Creator/2.3.4/resources/cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
}

android.applicationVariants.all { variant ->
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssetsProvider.get().doLast {
        def sourceDir = "${buildDir}/../../../../.."


        copy {

            from "${sourceDir}"

            include "res/**"

            include "subpackages/**"

            include "src/**"

            include "jsb-adapter/**"

            include "main.js"

            include "project.json"

            into outputDir

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "D:/CocosDashboard_1.0.6/resources/.editors/Creator/2.3.4/resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.facebook.android:facebook-login:4.42.0'
    implementation 'androidx.browser:browser:1.0.0'

    implementation 'com.google.firebase:firebase-messaging'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.applovin:applovin-sdk:+'
    implementation 'com.applovin.mediation:facebook-adapter:+'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.+'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.+'
    implementation 'com.applovin.mediation:google-adapter:+'
    implementation 'com.applovin.mediation:adcolony-adapter:+'
    implementation 'com.applovin.mediation:fyber-adapter:+'
    implementation 'com.applovin.mediation:inmobi-adapter:+'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //noinspection GradleCompatible
    implementation 'com.android.support:customtabs:28.+'
    implementation 'com.applovin.mediation:smaato-adapter:+'
    implementation 'com.applovin.mediation:vungle-adapter:+'
    implementation 'com.applovin.mediation:unityads-adapter:+'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    implementation ('com.kochava.base:tracker:3.9.0'){
        transitive = false
    }
    // Required: Install Referrer
    implementation 'com.android.installreferrer:installreferrer:2.1'

    // Optional: Instant App Status Collection
    implementation "com.google.android.gms:play-services-instantapps:17.0.0"

    implementation 'com.google.android.gms:play-services-places:9.6.1'
    implementation 'com.google.android.gms:play-services-maps:9.6.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //noinspection GradleCompatible
    implementation 'com.android.support:customtabs:28.+'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'gdut.bsx:share2:0.9.3'
    implementation 'org.jetbrains:annotations:15.0'
    implementation "com.android.billingclient:billing:3.0.0"


}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'applovin-quality-service'
applovin {
    apiKey "IcTWWUG027h_OOs5ZIXKvOpEZxuHX5vAWcQFm87KrfWAlDeuRlB3DD3gIIzEUtrR3GasWyLny21r7Vt_a_L5oB"
}
